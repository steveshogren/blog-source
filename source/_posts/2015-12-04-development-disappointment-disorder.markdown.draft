---
layout: post
title: "Development Disappointment Disorder"
date: 2015-12-04 06:57:55 -0500
comments: true
categories: 
- Meta Game
- Management
published: false
---

You just finished this really hard feature. It's taken you a lot longer than
expected. The whole thing was a lot harder than anyone realized. Not only that,
but the feature wasn't clearly explained, so you lost time churning on the
actual requirements. Despite all the confusion, iteration, and technical
challenges, you managed to get it working! You look back, and realize how much
you have learned and grown.

You show it off to the product owner. The product owner barely seems to hear
you, their shoulders slump in disappointment. "Great, but we are still four
weeks behind."

If this sounds familiar, your team is infected with Development Disappointment
Disorder.

It looks different in every team, but Development Disappointment Disorder is
incredibly common. I've seen it manifest in many different ways. It can be the
manager who sets unreasonable deadlines then demands everyone work overtime to
meet it. The project manager who gets angry at every little thing. The
developers who feel they need to point fingers to shift the blame. The boss who
is never happy no matter what is achieved. The team that feels they have never
had a successful release.

## Causes

Development Disappointment Disorder is caused by unreasonable expectations.
Someone thinks, hopes, or wishes they can get 100 units of productivity from a
team and co debase that only can sustain 30-40 units. What they want just isn't
possible, and no amount of cajoling, pressuring, yelling, or passive aggressive
comments is going to change that.

Productivity is ultimately not really a people problem. There is an upper limit
to what any given team can ever produce. The human mind has very real
boundaries, and when combined with a team size and existing codebase, very real
limits exist.

You cannot rush software development without incurring significant decreases in
quality, stability, or maintainability. The work is so complex and notoriously
difficult, that every expert in our field agrees with adages like, "adding
developers to a late project makes it later." What adds to the complexity is
many types of development projects are very difficult to predict.

## Alternatives

If you manage a development team, you need to consider 

